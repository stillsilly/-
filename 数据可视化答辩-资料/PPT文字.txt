前端数据可视化


概念，工具，方法


概念：
百度百科：
数据可视化主要旨在借助于图形化手段，清晰有效地传达与沟通信息。但是，这并不就意味着数据可视化就一定因为要实现其功能用途而令人感到枯燥乏味，或者是为了看上去绚丽多彩而显得极端复杂。为了有效地传达思想概念，美学形式与功能需要齐头并进，通过直观地传达关键的方面与特征，从而实现对于相当稀疏而又复杂的数据集的深入洞察。然而，设计人员往往并不能很好地把握设计与功能之间的平衡，从而创造出华而不实的数据可视化形式，无法达到其主要目的，也就是传达与沟通信息。




前端数据可视化实现方式：
主要有两种：SVG   canvas  webgl


canvas  画布
HTML 的 <canvas> 元素提供了一个空白绘图区域，可以使用 APIs （比如 Canvas 2D 或 WebGL）来绘制图形。


优点：
canvas绘图不会给每个点生成对象，canvas绘制速度快，消耗内存少。
兼容性较好。除了IE6，其他浏览器都可以支持。

缺点：
只能绘制2D图像，暂时不支持3D图像。(平时说的canvas支持3D是指通过webGL)
canvas绘制图形出并非可以直接操作的dom对象。如果要对其进行类似dom的操作，比较麻烦,所以要使用类库。

svg
可缩放矢量图形（Scalable Vector Graphics，SVG)，是一种用来描述二维矢量图形的XML 标记语言。
SVG 图像在放大或改变尺寸的情况下其图形质量不会损失

优点：
无损缩放
SVG图形的节点可以像dom元素一样控制，这就让自主创作图形变得更容易。相对于canvas这也是非常大的优势。
缺点：
SVG是2D矢量图，不能画3D图形。
SVG的节点都是对象，非常占用内存。



webGL
WebGL (Web图形库) 是一种JavaScript API，用于在任何兼容的Web浏览器中呈现交互式3D和2D图形，而无需使用插件。WebGL通过引入一个与OpenGL ES 2.0紧密相符合的API，可以在HTML5 <canvas> 元素中使用。


前端数据可视化常用类库：

echarts  github 两万关注
canvas  上手简单  可以很方便容易地实现常规图表  百度开发，中文资料丰富 社区活跃，
复杂的深度定制功能的开发不方便




hightcharts  GitHub 6千关注
svg


d3
D3的全称是Data-Driven Documents(数据驱动文档)，在github上关注数量6万8千
主要基于svg，第4版开始对canvas有更多的支持
功能强大，适合开发复杂的深度定制的图表 资料丰富，案例非常多
学习曲线比较陡峭，不易上手  基于svg，节点数量过多时可能有性能问题




three.js  GitHub 3万5千
Three.js是使浏览器中的WebGL - 3D 变得非常简易的类库。一个简单的立方体要通过原始的WebGL 来实现需要几百行Javascript 和着色代码，但是如果用Three.js，则只需要很少的代码。
https://cybermap.kaspersky.com
three.js的一个图

需要注意的问题：
额外操作：比如点击查看更多详情；
方便复用的统一的api和数据结构：对应不同的数据产生对应的pdf，excel，xml，json，表，图；
单页还是非单页？    页面显示速度、开发速度复杂度，
